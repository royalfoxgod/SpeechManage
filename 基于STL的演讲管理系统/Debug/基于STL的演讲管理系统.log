生成启动时间为 2024/2/19 21:10:04。
     1>项目“d:\visual studio 2013\Projects\基于STL的演讲管理系统\基于STL的演讲管理系统\基于STL的演讲管理系统.vcxproj”在节点 2 上(Build 个目标)。
     1>ClCompile:
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\CL.exe /c /ZI /nologo /W3 /WX- /sdl /Od /Oy- /D _UNICODE /D UNICODE /Gm /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Fo"Debug\\" /Fd"Debug\vc120.pdb" /Gd /TP /analyze- /errorReport:prompt SpeechManager.cpp "演讲比赛管理系统.cpp"
         演讲比赛管理系统.cpp
         SpeechManager.cpp
     1>d:\visual studio 2013\projects\基于stl的演讲管理系统\基于stl的演讲管理系统\speechmanager.cpp(32): warning C4018: “<”: 有符号/无符号不匹配
     1>d:\visual studio 2013\projects\基于stl的演讲管理系统\基于stl的演讲管理系统\speechmanager.cpp(132): warning C4018: “<”: 有符号/无符号不匹配
     1>c:\program files (x86)\microsoft visual studio 12.0\vc\include\numeric(20): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\numeric(31): 参见对正在编译的函数 模板 实例化“_Ty std::_Accumulate<std::_Deque_unchecked_iterator<_Mydeque>,_Ty,_Fn2>(_InIt,_InIt,_Ty,_Fn2)”的引用
                 with
                 [
                     _Ty=float
         ,            _Mydeque=std::_Deque_val<std::_Deque_simple_types<double>>
         ,            _Fn2=std::plus<void>
         ,            _InIt=std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<double>>>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\numeric(39): 参见对正在编译的函数 模板 实例化“_Ty std::accumulate<_InIt,_Ty,std::plus<void>>(_InIt,_InIt,_Ty,_Fn2)”的引用
                 with
                 [
                     _Ty=float
         ,            _InIt=std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<double>>>
         ,            _Fn2=std::plus<void>
                 ]
                 d:\visual studio 2013\projects\基于stl的演讲管理系统\基于stl的演讲管理系统\speechmanager.cpp(225): 参见对正在编译的函数 模板 实例化“_Ty std::accumulate<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<double>>>,float>(_InIt,_InIt,_Ty)”的引用
                 with
                 [
                     _Ty=float
         ,            _InIt=std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<double>>>
                 ]
     1>c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility(521): warning C4244: “参数”: 从“const double”转换到“const int”，可能丢失数据
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(1789): 参见对正在编译的函数 模板 实例化“bool std::_Debug_lt_pred<std::greater<int>,const double&,const double&>(_Pr,_Ty1,_Ty2,std::_Dbfile_t,std::_Dbline_t)”的引用
                 with
                 [
                     _Pr=std::greater<int>
         ,            _Ty1=const double &
         ,            _Ty2=const double &
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(1160): 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,true>>::_Insert_nohint<std::pair<const _Kty,_Ty>&,std::_Tree_node<std::pair<const _Kty,_Ty>,void *>*>(bool,_Valty,_Nodety)”的引用
                 with
                 [
                     _Kty=double
         ,            _Ty=int
         ,            _Pr=std::greater<int>
         ,            _Alloc=std::allocator<std::pair<const double,int>>
         ,            _Valty=std::pair<const double,int> &
         ,            _Nodety=std::_Tree_node<std::pair<const double,int>,void *> *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(1160): 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,true>>::_Insert_nohint<std::pair<const _Kty,_Ty>&,std::_Tree_node<std::pair<const _Kty,_Ty>,void *>*>(bool,_Valty,_Nodety)”的引用
                 with
                 [
                     _Kty=double
         ,            _Ty=int
         ,            _Pr=std::greater<int>
         ,            _Alloc=std::allocator<std::pair<const double,int>>
         ,            _Valty=std::pair<const double,int> &
         ,            _Nodety=std::_Tree_node<std::pair<const double,int>,void *> *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\map(382): 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,true>>::insert<std::pair<double,int>>(_Valty &&)”的引用
                 with
                 [
                     _Kty=double
         ,            _Ty=int
         ,            _Pr=std::greater<int>
         ,            _Alloc=std::allocator<std::pair<const double,int>>
         ,            _Valty=std::pair<double,int>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\map(382): 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,true>>::insert<std::pair<double,int>>(_Valty &&)”的引用
                 with
                 [
                     _Kty=double
         ,            _Ty=int
         ,            _Pr=std::greater<int>
         ,            _Alloc=std::allocator<std::pair<const double,int>>
         ,            _Valty=std::pair<double,int>
                 ]
                 d:\visual studio 2013\projects\基于stl的演讲管理系统\基于stl的演讲管理系统\speechmanager.cpp(233): 参见对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>> std::multimap<_Kty,_Ty,std::greater<_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::insert<std::pair<double,int>>(_Valty &&)”的引用
                 with
                 [
                     _Kty=double
         ,            _Ty=int
         ,            _Valty=std::pair<double,int>
                 ]
                 d:\visual studio 2013\projects\基于stl的演讲管理系统\基于stl的演讲管理系统\speechmanager.cpp(233): 参见对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>> std::multimap<_Kty,_Ty,std::greater<_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::insert<std::pair<double,int>>(_Valty &&)”的引用
                 with
                 [
                     _Kty=double
         ,            _Ty=int
         ,            _Valty=std::pair<double,int>
                 ]
     1>c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility(523): warning C4244: “参数”: 从“const double”转换到“const int”，可能丢失数据
         正在生成代码...
       Link:
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\link.exe /ERRORREPORT:PROMPT /OUT:"d:\visual studio 2013\Projects\基于STL的演讲管理系统\Debug\基于STL的演讲管理系统.exe" /INCREMENTAL /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"d:\visual studio 2013\Projects\基于STL的演讲管理系统\Debug\基于STL的演讲管理系统.pdb" /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"d:\visual studio 2013\Projects\基于STL的演讲管理系统\Debug\基于STL的演讲管理系统.lib" /MACHINE:X86 Debug\SpeechManager.obj
         "Debug\演讲比赛管理系统.obj"
         基于STL的演讲管理系统.vcxproj -> d:\visual studio 2013\Projects\基于STL的演讲管理系统\Debug\基于STL的演讲管理系统.exe
     1>已完成生成项目“d:\visual studio 2013\Projects\基于STL的演讲管理系统\基于STL的演讲管理系统\基于STL的演讲管理系统.vcxproj”(Build 个目标)的操作。

生成成功。

已用时间 00:00:01.09
